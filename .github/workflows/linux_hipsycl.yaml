name: hipSYCL test

on: [push]

jobs:
  test-with-hipsycl:
    name: Run tests with hipSYCL
    strategy:
      matrix:
        clang_version: [13]
        rocm_version: ['5.1.1']
        os: [ubuntu-20.04]
        cuda: [11.0]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: install ROCm
      run: |
        sudo apt install libnuma-dev cmake unzip
        wget -q -O - https://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -
        echo 'deb [arch=amd64] https://repo.radeon.com/rocm/apt/${{matrix.rocm_version}}/ ubuntu main' | sudo tee /etc/apt/sources.list.d/rocm.list
        sudo apt update
        sudo apt install rocm-dev rocblas
    - name: install LLVM
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh ${{matrix.clang_version}}
        sudo apt install libclang-${{matrix.clang_version}}-dev clang-tools-${{matrix.clang_version}} libomp-${{matrix.clang_version}}-dev
    - name: install boost
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install libboost-all-dev
    - name: build hipSYCL
      run: |
        git clone https://github.com/illuhad/hipSYCL.git
        cd hipSYCL
        mkdir build && cd build
        cmake -DCMAKE_CXX_COMPILER=/usr/bin/clang++-${{matrix.clang_version}} -DCLANG_EXECUTABLE_PATH=/usr/bin/clang++-${{matrix.clang_version}} -DLLVM_DIR=/usr/lib/llvm-${{matrix.clang_version}}/cmake -DWITH_CUDA_BACKEND=OFF -DWITH_ROCM_BACKEND=ON -DWITH_LEVEL_ZERO_BACKEND=OFF -DCMAKE_INSTALL_PREFIX=/opt/hipSYCL -DROCM_PATH=/opt/rocm-${{matrix.rocm_version}} ..
        make -j4 install
        # cp /opt/hipSYCL/cuda/lib64/stubs/libcuda.so `pwd`/install/lib/libcuda.so
        # cp /opt/hipSYCL/cuda/lib64/stubs/libcuda.so `pwd`/install/lib/libcuda.so.1
    - name: install TBB and MKL
      run: |
        wget https://registrationcenter-download.intel.com/akdlm/irc_nas/18236/l_BaseKit_p_2021.4.0.3422.sh
        bash l_BaseKit_p_2021.4.0.3422.sh -a --action install -s --eula accept --components=intel.oneapi.lin.tbb.devel:intel.oneapi.lin.mkl.devel --install-dir /opt/intel/ --download-dir /opt/intel/dw/ --download-cache /opt/intel/dw/ --package-path /opt/intel/intel
    - name: clone and build oneMKL
      env:
        rocblas_DIR: /opt/rocm-${{matrix.rocm_version}}/lib/cmake/rocblas/
        hip_DIR: /opt/rocm-${{matrix.rocm_version}}/lib/cmake/hip/
        AMDDeviceLibs_DIR: /opt/rocm-${{matrix.rocm_version}}/lib/cmake/AMDDeviceLibs/
        amd_comgr_DIR: /opt/rocm-${{matrix.rocm_version}}/lib/cmake/amd_comgr/
        hsa-runtime64_DIR: /opt/rocm-${{matrix.rocm_version}}/lib/cmake/hsa-runtime64/
      run: |
        cd
        git clone https://github.com/oneapi-src/oneMKL.git
        cd oneMKL
        mkdir build
        cd build
        cmake -DENABLE_CUBLAS_BACKEND=False -DENABLE_MKL_GPU_BACKEND=False -DENABLE_NETLIB_BACKEND=False -DENABLE_ROCBLAS_BACKEND=True -DTARGET_DOMAINS=blas -DMKL_ROOT=/opt/intel/mkl/latest/ -DHIPSYCL_TARGETS=omp\;hip:gfx906 -DONEMKL_SYCL_IMPLEMENTATION=hipSYCL -DROCM_ROOT=/opt/rocm-${{matrix.rocm_version}}/ ..
        
